
void setup() { 

    Serial.begin(9600);
    servoI.attach(4);
    servoD.attach(5);
    servoP.attach(6);
    servoPMove.attach(7);
            
    pinMode(1 , INPUT);    
    pinMode(2 , INPUT);
    pinMode(3 , INPUT);
    
    //Ultrasonidos
    for(int i=0; i<3;i++){
          pinMode(pinesTrig[i] , OUTPUT);
          pinMode(pinesEcho[i], INPUT);
    }
    
    parar_todo();
    mover_pinza(0);

    mover_pinza(3);

}

void girar(String lado, int grados) {
    if(lado=="derecha"){
      servoD.write(0);
      servoI.write(0);
      delay(7.86*grados);//AJUSTAR AL ROBOT

    } else{
      servoD.write(180);
      servoI.write(180);
      delay(5.56*grados);//AJUSTAR AL ROBOT

    }
      servoD.write(90);
      servoI.write(90);
}

void mover_hacia(String direccion, int cents) {
    if(direccion=="delante") {
      servoD.write(110); // alante
      servoI.write(70); // alante
      delay(0*cents);
     } else {
       servoD.write(0); // atras
       servoI.write(180); // atras
       delay(0*cents);
     }
     servoD.write(90);
     servoI.write(90);
}

void parar_todo() {
  servoD.write(90);
  servoI.write(90);
}

void actualizarTodosLosSensores(){ 
  for(int i=0; i < 3; i++){
    sensor[i] =  digitalRead(pinesSensores[i]);
  }
  
  // 4 lecturas adicionales
  // Se guardan las lineas
  for(int i=0; i < 4; i++){
    delay(15);
    
     for(int i=0; i < 3; i++){
       if (digitalRead(pinesSensores[i]) == LINEA )
          sensor[i] = LINEA;
     }
  }
}

bool hay_linea(int id_sensor) {
    actualizarTodosLosSensores();
    return sensor[id_sensor-1] == LINEA;
}

void cerrar_pinza(){
    while ( gradosPinza < GMAX){
            gradosPinza = gradosPinza+1;
            servoP.write(gradosPinza);
        }
}

void abrir_pinza(){
    while ( gradosPinza > GMIN){
        gradosPinza = gradosPinza-1;
        servoP.write(gradosPinza);
    }
}

void mover_pinza(int coordenada) {
   if ( coordenada < 0 || coordenada > 5 )
    return;

  int movimiento = coordenada - posicionY;
  int tiempoY = tiempoPaso  * coordenada;

  if(coordenada==0) {
    while(analogRead(A0)){
      servoPMove.write(0);
    }
   
  } else {
    if (movimiento < 0) {
      servoPMove.write(0);
      delay(-tiempoY);
    } else {
      servoPMove.write(180);
      delay(tiempoY);
    } 
  }
  servoPMove.write(90);

  posicionY = coordenada;
}


bool hay_obstaculo(int distancia_param, int id_sensor) {
  digitalWrite(pinesTrig[id_sensor-1], LOW); /* Por seguridad volvemos a poner el Trig a LOW*/
  delayMicroseconds(5);
  digitalWrite(pinesTrig[id_sensor-1], HIGH); /* Emitimos el pulso ultrasÃ³nico */
  delayMicroseconds(10);
  //Hacemos varias medidas 
  int medida=pinesEcho[id_sensor-1];
  
 
  int distancia1 = int(0.017 * pulseIn(medida, HIGH));
  int distancia2 = int(0.017 * pulseIn(medida, HIGH));
  int distancia3 = int(0.017 * pulseIn(medida, HIGH));
  int distancia4 = int(0.017 * pulseIn(medida, HIGH));
  
  int distancia=(distancia1+distancia2+distanci3+distancia4)/4;
  return distancia_param<distancia;
}

void mover_casilla(String direccion, int numCasillas) {
    switch(direccion){
      case 'DELANTE':
         for(int i=0; i < numCasillas; i++){
         avanzar_casilla();
          }
      case 'DETRAS':
          girar("derecha",90);
          for(int i=0; i < numCasillas; i++){
                  avanzar_casilla();
          }
          girar("izquierda",90);
          break;
      case 'IZQUIERDA':
          girar("izquierda",90);
          for(int i=0; i < numCasillas; i++){
                  avanzar_casilla();
          }
          girar("derecha",90);
          break;
      case 'ATRAS':
            girar("derecha", 180);
            for(int i=0; i < numCasillas; i++){
                avanzar_casilla();
            }
            girar("izquierda",180);
            break;;
    }
}

void avanzar_casilla(){
  int ruedas_delante=0;
  int ruedas_detras=0;
  while (0 ==ruedas_delante || 0==ruedas_detras){
        mover_hacia("delante", 1);
        if(hay_linea(1) && hay_linea(2) && hay_linea(3)){
          ruedas_delante=1;
        }
        if(hay_linea(4) && hay_linea(5) && hay_linea(6)) {
          ruedas_detras=1;
          delay(100);
        }
  }
}



